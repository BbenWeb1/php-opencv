------------------------------------------------ -------------------------------------------------- ----

CODE CHANGES:

config.w32

php_opencv.h

source/opencv2/core/opencv_mat.cc

source/opencv2/opencv_imgproc.cc

-------------------------------------------------- -------------------------------------------------- -----------------------

#### 1째 ####

TOOLS:

Visual studio 17 and c/c++ compiler, Windows Arch 64x, PHP 8.0 or higher

-------------------------------------------------- -------------------------------------------------- -----------------------

#### 2째 ####

DEPENDENCES:

Visual studio 17 and c/c++ compiler

OPENCV project installed on the windows machine with all modules ( dll ) and supported by php_opencv.
https://github.com/spmallick/learnopencv/tree/master/Install-OpenCV-Windows-exe 


#### 3째 ####

PHP ENVIRONMENT:

Manual to prepare environment and build PHP https://wiki.php.net/internals/windows/stepbystepbuild_sdk_2

The php_opencv must be compiler as a PECL extension, after the steps to prepare the build environment on windows.

-------------------------------------------------- -------------------------------------------------- ----------------------

#### 4째 ####

Building PECL extensions

Add the folder ( pecl ) at the same level as the folder ( php-src ) where the pecl extensions will be, in that same folder you must place the php_opencv project to compile with php.

In the root of the pecl folder, clone the php_opencv repository, and edit the opencv version in the PHP_OPENCV_VERSION variable, in the php_opencv.h file

In the root of the php-src folder, Run buildconf --force, to reload the settings

In the root of the php-src folder, Run configure --help , an option --with-opencv should appear, this option should be used when compiling php

In the root of the php-src folder, --with-extra-includes=D:\Opencv\include --with-extra-libs=E:\Opencv\x64\vc17\lib --with-curl--with-opencv --enable-cli --enable-pdo --with-pdo-firebird --with-pdo-mysql --with-pdo-pgsql --with-pdo-sqlite --with-tidy --with-password-argon2 --with-sodium --enable-sockets --with-pgsql --with-openssl --enable-mbstring --enable-mbregex --with-ldap --with-imap --with-gmp --with-gettext --enable-ftp --enable-fileinfo --with-ffi --with-bz2 --enable-phpdbg --enable-phpdbgs --enable-embed --with-all-shared --enable-sanitizer --with -dba --with-qdbm --with-db --with-lmdb --enable-intl --with-oci8-19 --with-snmp --with-sqlite3 --with-config-file-scan-dir --enable-exif --with-mysqli --enable-soap --enable-bcmath --enable-calendar --enable-ctype --with-readline --enable-tokenizer --enable-zip --enable-shmop --enable-libxml

In the root of the php-src folder, Run nmake snap




